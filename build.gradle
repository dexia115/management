/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '17-5-27 下午5:41' with Gradle 3.2
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2/userguide/tutorial_java_projects.html
 */
 buildscript {
  ext {
    springBootVersion = '1.4.2.RELEASE'
  }
    repositories {
        jcenter()
        //mavenLocal()
        //mavenCentral()
    }
 
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.akhikhl.gretty:gretty:1.4.2'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'war'
//apply plugin: 'org.akhikhl.gretty'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    
    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("javax.servlet:javax.servlet-api")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity4")
    compile("org.springframework.boot:spring-boot-devtools")
    compile('org.jdom:jdom:1.1')
    //compile("org.springframework.data:spring-data-redis")
    //compile("org.springframework.boot:spring-boot-starter-redis")
    //compile("org.java-websocket:Java-WebSocket:1.3.0")
    //compile("net.sf.json-lib:json-lib:2.4")
    //compile("org.apache.httpcomponents:httpclient:4.2.1")
    //compile("org.apache.httpcomponents:httpcore:4.2.1")
    compile("com.google.code.gson:gson:2.3.1")
    compile("mysql:mysql-connector-java")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("commons-lang:commons-lang:2.4")

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
